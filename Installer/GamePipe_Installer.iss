; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
#include <idp.iss>

#define MyAppName "Game Pipe"
#define MyAppVersion "1.0.5"
#define MyAppPublisher "Joe Shaw"
#define MyAppExeName "GamePipe.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{160D770F-B51A-443A-B01B-D0E0128A0B31}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={pf}\GamePipe
DisableProgramGroupPage=yes
LicenseFile=..\LICENSE.txt
OutputBaseFilename=GamePipe_Installer_{#MyAppVersion}
SetupIconFile=..\GamePipe\Resources\GamePipe.ico
Compression=lzma
SolidCompression=yes

[InstallDelete]      
Type: files; Name: {app}\CachedImage.dll
Type: files; Name: {app}\GamePipeLib.dll
Type: files; Name: {app}\GamePipeService.dll
Type: files; Name: {app}\log4net.dll
Type: files; Name: {app}\Wingman.exe
Type: files; Name: {app}\Wingman.exe.config

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]        
Source: "..\GamePipe\bin\Release\GamePipe.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\GamePipe\bin\Release\GamePipe.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\GamePipe\bin\Release\GamePipe_Helper.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\GamePipe\bin\Release\GamePipe_Helper.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "..\License.txt"; DestDir: "{app}"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Dirs]
Name: "{app}\logs"; Permissions: everyone-modify

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent
             
;Awesome guide for .net 4.5 auto-downloading: http://blogs.msdn.com/b/davidrickard/archive/2015/07/17/installing-net-framework-4-5-automatically-with-inno-setup.aspx
;The following is pretty much verbatim, but I updated the regVersion number to 4.5.2, per this article: https://msdn.microsoft.com/en-us/library/hh925568%28v=vs.110%29.aspx#net_b
;This link provides download links and reg version numbers to check for all versions of the framework: https://docs.microsoft.com/en-us/dotnet/framework/deployment/deployment-guide-for-developers
[Code]
function Framework45IsNotInstalled(): Boolean;
var
  bSuccess: Boolean;
  regVersion: Cardinal;
begin
  Result := True;

  bSuccess := RegQueryDWordValue(HKLM, 'Software\Microsoft\NET Framework Setup\NDP\v4\Full', 'Release', regVersion);
  if (True = bSuccess) and (regVersion >= 379893) then begin
    Result := False;
  end;
end; 

procedure InitializeWizard;
begin
  if Framework45IsNotInstalled() then
  begin
    idpAddFile('http://go.microsoft.com/fwlink/?LinkId=397707', ExpandConstant('{tmp}\NetFrameworkInstaller.exe'));
    idpDownloadAfter(wpReady);
  end;
end;


procedure InstallFramework;
var
  StatusText: string;
  ResultCode: Integer;
begin
  StatusText := WizardForm.StatusLabel.Caption;
  WizardForm.StatusLabel.Caption := 'Installing .NET Framework 4.5.2. This might take a few minutes...';
  WizardForm.ProgressGauge.Style := npbstMarquee;
  try
    if not Exec(ExpandConstant('{tmp}\NetFrameworkInstaller.exe'), '/passive /norestart', '', SW_SHOW, ewWaitUntilTerminated, ResultCode) then
    begin
      MsgBox('.NET installation failed with code: ' + IntToStr(ResultCode) + '.', mbError, MB_OK);
    end;
  finally
    WizardForm.StatusLabel.Caption := StatusText;
    WizardForm.ProgressGauge.Style := npbstNormal;

    DeleteFile(ExpandConstant('{tmp}\NetFrameworkInstaller.exe'));
  end;
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  case CurStep of
    ssPostInstall:
      begin
        if Framework45IsNotInstalled() then
        begin
          InstallFramework();
        end;
      end;
  end;
end;